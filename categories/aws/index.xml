<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aws on SOTA</title>
    <link>http://deeeet.com/categories/aws/</link>
    <description>Recent content in Aws on SOTA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>Copyright (C) 2013-2015 Taichi Nakashima All Right Reserved.</copyright>
    <lastBuildDate>Sun, 20 Apr 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://deeeet.com/categories/aws/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>OSXからAmazon Glacierに写真を自動バックアップ</title>
      <link>http://deeeet.com/writing/2014/04/20/lightroom-s3/</link>
      <pubDate>Sun, 20 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://deeeet.com/writing/2014/04/20/lightroom-s3/</guid>
      <description>今まで惰性でiPhoto使って写真管理をしてきたが，そろそろ本格的な編集/加工をしたいなと思い，Lightroomに移行した（いずれVSCO Filmを使いたい）．その際，バックアップも外付けHDDからAmazon Glacierに移行した．
Amazon Glacierは，Amazonの提供するクラウドストレージで，1GBあたり1円/月で使える．S3と比べて値段は1/10だが，データをダウンロードするには解凍する時間が必要になる．データを頻繁に取り出さないバックアップなどの用途に向いている．また，AWS Command Line Interfaceでファイル同期ができるので，スクリプトを少し書いて自動バックアップの設定も簡単にできる．
launchctlを使ってLightroomにぶっ込んだ写真を自動でGlacierにバックアップをする仕組みをつくった．
まず，Bucketを作成する．
$ export AWS_CONFIG_FILE=... $ export BUCKET=... $ aws s3 mb s3://${BUCKET}  次に，作成したBucketにファイルのLifecycleルールを設定する．対象はBucket内の全てのファイルで，ファイルが同期され次第すぐにGlacierに移行するようにする．これを実現するため以下のjsonファイルを準備する．
# lifecycle.json { &amp;quot;Rules&amp;quot;: [ { &amp;quot;ID&amp;quot;: &amp;quot;Rule for backup&amp;quot;, &amp;quot;Status&amp;quot;: &amp;quot;Enabled&amp;quot;, &amp;quot;Prefix&amp;quot;: null, &amp;quot;Transition&amp;quot;: { &amp;quot;Days&amp;quot;: 0, &amp;quot;StorageClass&amp;quot;: &amp;quot;GLACIER&amp;quot; } } ] }  作成したルールをBucketに適用する．
$ aws s3api put-bucket-lifecycle --bucket ${BUCKET} --lifecycle file://lifecycle.json  ファイルの同期は以下のシェルスクリプトで行う．例えば~/Photo以下を同期する．
# backup.sh SRC=/Users/tcnksm/Photo BUCKET=... echo &amp;quot;[$(date +%Y-%m-%d-%H-%M)] Start backup to S3&amp;quot; export AWS_CONFIG_FILE=.</description>
    </item>
    
  </channel>
</rss>