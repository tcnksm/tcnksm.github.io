<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reading Vagrant on SOTA</title>
    <link>https://deeeet.com/categories/reading-vagrant/</link>
    <description>Recent content in Reading Vagrant on SOTA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>Copyright (C) 2013-2019 Taichi Nakashima All Right Reserved.</copyright>
    <lastBuildDate>Tue, 25 Feb 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://deeeet.com/categories/reading-vagrant/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>&#34;実践Vagrant&#34;を読んだ</title>
      <link>https://deeeet.com/writing/2014/02/25/vagrant-up-and-running/</link>
      <pubDate>Tue, 25 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://deeeet.com/writing/2014/02/25/vagrant-up-and-running/</guid>
      <description>O&amp;rsquo;Reilly Japan - 実践 Vagrant
Vagrantは普通に問題なく使えているし，本をわざわざ読む必要もないと思ったが，以下のようなモチベーションで購入．
 Mitchell Hashimoto氏の設計思想的な部分を知りたかった プラグインをつくりたかった 落ち穂拾い  まず，設計思想．1章に&amp;rdquo;Vagrant道&amp;rdquo;という節があり，ユースケースというか，Vagrantを使った高レベルなワークフローが説明されている．開発者や運用技術者からみて，普段のプロジェクトの中でVagrantがどのような役割を果たすのかが簡単にまとめられている．Vagrantが近年の開発環境にあまりに自然に入り込んできたのは，このようなビジョンがあってからこそだと思う．誰もが理解できるビジョンを掲げ，それをコードに落とし込むところがMitchell氏のすごさなんだと改めて認識した．開発者としても，ビジョン-&amp;gt;コードの流れを参考にしたい．
プラグインの開発 次にプラグイン．これを読んでからいくつかプラグインを作ってみた．公開したのは以下．
 プロビジョニングの終了をiOS/Androidに通知するVagrantのpluginつくった 他人に共有したくない設定をVagrantfileに書くためのpluginつくった  プラグインを作るのはとても簡単．本書でカバーされているのは，以下．
 新しいサブコマンドの開発 (command) 新しい設定オプションの開発 (config) config.vm.provision :dockerのような新しいプロビジョナーの開発 (provisioner) vagrant upのような既存動作を変更 (hook)  プラグインはrubygemsとして開発する．rubygemを作ったことがあるひとであればすんなりと開発できる．詳しくは書かないが，基本はrubyのDSLによる簡単な記述し，そのDSLの戻り値を決められたメソッドを実装したクラスにするだけ．
すこしハマった部分．本書や公式ドキュメントだとVagrantfileにVagrant.require_plugin &amp;quot;my_plugin&amp;quot;を記述してプラグインのテストを行うように書かれているが，自分の環境だとうまく動かなかった．そのため，プラグインをビルドして，直接システムのVagrantに読み込ませてテストを行った．毎回コマンド打つのは億劫なので，以下のようなRakeタスクを作った．
require &amp;quot;vagrant-secret&amp;quot; require &amp;quot;bundler/gem_tasks&amp;quot; version = VagrantPlugins::Secret::VERSION desc &amp;quot;Install plugin to system vagrant.&amp;quot; task :install_plugin do system(&amp;quot;git add -u&amp;quot;) Rake::Task[:build].execute system(&amp;quot;/usr/bin/vagrant plugin install pkg/vagrant-secret-#{version}.gem&amp;quot;) end desc &amp;quot;Uninstall plugin&amp;quot; task :uninstall_plugin do system(&amp;quot;/usr/bin/vagrant plugin uninstall vagrant-secret&amp;quot;) end # alias task :i =&amp;gt; :install_plugin task :u =&amp;gt; :uninstall_plugin  ちょっとTips．プラグイン定義の先頭に以下を記述して，プラグインが実際にVagrantの中で動作しているかを確認するのがよい．これは，本書のコラムに書かれていた内容．他のVagrant pluginのプロジェクトにも採用されている．</description>
    </item>
    
  </channel>
</rss>